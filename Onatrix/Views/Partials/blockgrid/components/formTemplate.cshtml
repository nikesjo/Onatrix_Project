@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@{
    var formName = Model?.Content.Value<string>("formName") ?? "";
    var headline = Model?.Content.Value<string>("headline") ?? "";
	var formText = Model?.Content.Value<string>("formText") ?? "";

    var colorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("backgroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = !string.IsNullOrEmpty(colorLabel) ? $"bg-{colorLabel}" : "";
}

<div class="form-section">
	@if (!string.IsNullOrEmpty(backgroundColorClass))
    {
        <div class="background @backgroundColorClass"></div>
    }
	<div class="headline">
		<h6>@formName</h6>
		<h2 class="title">@headline</h2>
	</div>
	@if (!string.IsNullOrEmpty(formText))
    {
        <p class="formText">@formText</p>
    }

	<form id="@formName" onsubmit="handleContactFormSubmit(event)" novalidate>
        @await Html.GetBlockGridItemAreasHtmlAsync(Model)
        @Html.GetBlockListHtml(Model.FormTemplate)
	</form>
</div>
