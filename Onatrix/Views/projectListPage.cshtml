@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model?.Value("pageTitle") ?? null;
	var selection = Umbraco.Content(Guid.Parse("8b7ae6a0-7562-4055-b129-4782dd7f9225"))
    .ChildrenOfType("projectItemTemplate")
    .Where(x => x.IsVisible());
	
	var itemsPerPage = 4;

	if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
		currentPage = 1;

	var totalItems = selection?.Count() ?? 0;
	var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);

	
}

@if (!string.IsNullOrEmpty(ViewBag.Title))
{
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}

<section class="projects">
	<div class="container">
		<div class="project-left">
		@if (pagedItems != null) 
		{
		@foreach (var item in pagedItems) 
		{
			var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
			var preamble = item?.Value<string>("preamble") ?? "";
			var dateUploaded = item?.Value<string>("dateUploaded") ?? "";    

			<a class="project-list" href="@item!.Url()">
				<div class="project-thumbnail">
					<img src="@image" alt="@item!.Name()">
				</div>
				<div class="project-content">
					<h4>@item!.Name()</h4>
					<p><i class="fa-solid fa-calendar-days"></i>@dateUploaded</p>
					<p>@preamble</p>
					<p class="read-more">Read More<i class="fa-light fa-arrow-right"></i></p>
				</div>			
			</a>
		}
		}
			<div class="pagination">
				@if (currentPage > 1) 
				{
					<a href="?page=@(currentPage - 1)" class="change">Prev</a>
				}
				else
				{
					<span class="change inactive">Prev</span>
				}

				<ul class="pages">
				@for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
				{
					<li class="@((i == currentPage) ? "number active" : "number")">
						<a href="?page=@i">@i</a>
					</li>
				}
				</ul>

				@if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
				{
					<a href="?page=@(currentPage + 1)" class="change">Next</a>
				}
				else
				{
					<span class="change inactive">Next</span>
				}
			</div>
		</div>
		<div class="project-right">
			<h2>Tags</h2>
			@{
			if (Model.Value<string[]>("projectTags").Length > 0)
			{
				@foreach (var item in Model.Value<string[]>("projectTags"))
				{
				<div class="projects-tags">
					<span class="tag">@item</span>
				</div>
				}
			}
			}
			<div class="projects-tags">
				<span class="tag">Report</span>
				<span class="tag">Business plans</span>
				<span class="tag">Insights</span>
				<span class="tag">Business</span>
				<span class="tag">App</span>
				<span class="tag">Project</span>
				<span class="tag">Finance</span>
				<span class="tag">Pricing</span>
			</div>
			<div class="support">
				<img src="/media/0swp2mrt/service-risk-management-letter.svg" alt="mail" class="mail-icon">
				<h3>How can we help you?</h3>
				<p>Online support 24/7, we are here to help you</p>
				<div class="email-input">
					<input class="form-control" type="email" placeholder="E-mail address">
					<button type="submit"><i class="fa-regular fa-envelope"></i></button>
				</div>
			</div>
		</div>
	</div>
</section>
@await Html.PartialAsync("partials/static/contactInfo.cshtml")